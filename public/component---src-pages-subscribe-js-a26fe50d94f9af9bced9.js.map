{"version":3,"file":"component---src-pages-subscribe-js-a26fe50d94f9af9bced9.js","mappings":"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","sources":["webpack://nwa-daily/./src/pages/subscribe.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql, useStaticQuery, StaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { withBreakpoints } from 'gatsby-plugin-breakpoints';\nimport \"../assets/css/main.css\";\n\nclass SubscribePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.emailRef = React.createRef();\n    this.state = {\n      email: \"\",\n      isModalOpen: false,\n      submitError: false,\n      isSubmitted: false,\n      date: new Date()\n    }\n  }\n  handleInputChange = event => {\n    console.log('test')\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    console.log(name)\n    this.setState({\n      [name]: value,\n    })\n    console.log(this.state.email)\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    \n    let postId = null\n    console.log(window.location.href.split('?id=').length)\n    if (window.location.href.split('?id=').length > 1) {\n      console.log('idhere')\n      console.log(window.location.href)\n      postId = window.location.href.split('?id=')[1]\n      postId = postId.split('&')[0]\n      console.log(postId)\n      }\n    else {\n        postId = 'regular'\n        console.log(postId)\n      }\n    if (this.state.email !== \"\") {\n    \n    const email = this.state.email.toLowerCase()\n    const requestBody = {\n        email: email,\n        location: \"subscribe\",\n        source: postId,\n        subscribeDate: this.state.date,\n        property: \"NWA Daily\"\n      }\n  \n    fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data)\n        this.setState({\n          isModalOpen: false,\n          isSubmitted: true\n        })\n        \n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //   fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n    //   method: 'POST',\n    //   body: JSON.stringify({email: email}),\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   mode: 'cors'\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       console.log(res.status)\n    //       return res.status\n    //     }\n    //     return res;\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n  }\n  else {\n    this.setState({\n      submitError: true,\n    })\n    console.log(true)\n  }\n  \n  }\n\n  render() {\n    const { breakpoints } = this.props;\n  return (\n    <StaticQuery\n    query={graphql`\n    query {\n      strapiHomepage {\n        hero {\n          title\n        }\n        seo {\n          metaTitle\n          metaDescription\n          shareImage {\n            publicURL\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n    <Layout seo={data.strapiHomepage.seo}>\n{breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n      <h3 className=\"uk-text-center\">Subscribe to receive our daily newsletter</h3>\n      <p className=\"uk-text-center\" style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"90%\"}}>Know all the happenings in NWA with a 5-minute read of our free email newsletter every weekday.</p>\n      <form class=\"uk-form\" style={{width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n            \n              <div class=\"test\">\n                    \n              {this.state.isSubmitted === false ?\n                (\n                  <div class=\"uk-margin\">\n            <input style={{width:\"60%\",color:\"#307765\",color:\"black\", marginLeft:\"auto\",marginRight:\"auto\",marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value})\n              }}\n              />\n            <button \n              style={{backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n                </div>\n            \n          </form>\n        \n        </div>\n)\n:\n(\n<div className=\"uk-section\">\n      {/* testing something */}\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n      <h3 className=\"uk-text-center\">Subscribe to receive our daily newsletter</h3>\n      <p className=\"uk-text-center\" style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"60%\"}}>Know all the happenings in NWA with a 5-minute read of our free email newsletter every weekday.</p>\n      <form class=\"uk-form\" style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"60%\"}}>\n            \n              <div class=\"test\">\n                    \n              {this.state.isSubmitted === false ?\n                (\n                  <div class=\"uk-margin\">\n            <input style={{width:\"80%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value})\n              }}\n              />\n            <button \n              style={{backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n                </div>\n            \n          </form>\n        \n        </div>\n)}\n    </Layout>\n    )}\n    />     \n  );\n}\n}\n\n\nexport default withBreakpoints(SubscribePage);"],"names":["SubscribePage","_React$Component","props","_this","call","handleInputChange","event","console","log","target","value","name","setState","state","email","submitHandler","e","preventDefault","postId","window","location","href","split","length","requestBody","toLowerCase","source","subscribeDate","date","property","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","isModalOpen","isSubmitted","catch","err","submitError","emailRef","React","Date","_inheritsLoose","prototype","render","breakpoints","this","StaticQuery","query","Layout","seo","strapiHomepage","sm","className","style","marginLeft","marginRight","width","class","color","marginBottom","paddingBottom","id","type","placeholder","labelText","onChange","backgroundColor","opacity","onClick","textAlign","withBreakpoints"],"sourceRoot":""}