{"version":3,"file":"component---src-pages-archive-js-1fbfcfa6379922655c35.js","mappings":"iRAoFA,EA/EiB,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SAClB,EAA8CC,SAAS,IAAhDC,EAAe,KAAEC,EAAkB,KACpCC,GAAcC,EAAAA,EAAAA,MAEpBC,WAAU,WACRC,MAAM,0FACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,IAChCF,MAAK,SAAAG,GAAI,OAAIR,EAAmBQ,EAAK,IACrCC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAM,GACxC,GAAG,IAEH,IAAME,EAAW,kBAAOf,IAAQ,OAAKE,IAE/Bc,EAAoBC,KAAKC,KAAKH,EAAYI,OAAS,GACpCJ,EAAYK,MAAM,EAAGJ,GACpBD,EAAYK,MAAMJ,EAAmBD,EAAYI,QAEvE,OAGC,2BAECf,EAAYiB,GAGR,sBAAIC,MAAM,kDACPP,EAAYQ,KAAI,SAACC,EAASC,GACzB,IAAIC,EAAK,IAAIC,KAAKH,EAAQI,KAAKC,MAI/B,OAKE,sBAAIC,IAAG,kBAAoBN,EAAQI,KAAKG,MACtC,qBAAGC,GAAG,eACJC,KAAM,YAAYT,EAAQI,KAAKG,MAVlB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OACpE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAYpCL,EAAGQ,YAAc,IAAKR,EAAGS,UAAY,MAAQX,EAAQI,KAAKQ,UAI9E,KAKJ,sBAAId,MAAM,kDACLP,EAAYQ,KAAI,SAACC,EAASC,GACzB,IAAIC,EAAK,IAAIC,KAAKH,EAAQI,KAAKC,MAI/B,OAKE,sBAAIC,IAAG,kBAAoBN,EAAQI,KAAKG,MACtC,qBAAGC,GAAG,eACJC,KAAM,YAAYT,EAAQI,KAAKG,MAVlB,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OACpE,OAAQ,SAAU,YAAa,UAAW,WAAY,YAYpCL,EAAGQ,YAAc,IAAKR,EAAGS,UAAY,MAAQX,EAAQI,KAAKQ,UAI9E,KAOV,EC5CMC,EAAK,YAwCX,EAvEoB,WAClB,IAAM1B,GAAO2B,EAAAA,EAAAA,gBAAeD,GACtBjC,GAAcC,EAAAA,EAAAA,MACpB,OACE,gBAAC,IAAM,CAACkC,IAAK5B,EAAK6B,eAAeD,KACpCnC,EAAYiB,GAEb,uBAAKoB,UAAU,cAEP,uBAAKC,MAAO,CAACC,WAAW,MAAOF,UAAU,mCACzC,sBAAIC,MAAO,CAACC,WAAW,OAAO,8BAC5B,gBAAC,EAAiB,CAAC3C,SAAUW,EAAKiC,iBAAiBC,UAO7D,uBAAKJ,UAAU,cAEP,uBAAKC,MAAO,CAACC,WAAW,OAAQF,UAAU,mCAC1C,sBAAIC,MAAO,CAACC,WAAW,OAAO,8BAC5B,gBAAC,EAAiB,CAACD,MAAO,CAACC,WAAW,MAAO3C,SAAUW,EAAKiC,iBAAiBC,UAOvF,C","sources":["webpack://nwa-daily/./src/components/archives.js","webpack://nwa-daily/./src/pages/archive.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./card\";\nimport { Link } from \"gatsby\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst Archives = ({ articles }) => {\n  const [restApiArticles, setRestApiArticles] = useState([]);\n  const breakpoints = useBreakpoint()\n\n  useEffect(() => {\n    fetch(\"https://api.beehiiv.com/v2/publications/pub_2213b531-0bad-4dc4-932c-2bf5fa45f9dd/posts\")\n      .then(response => response.json())\n      .then(data => setRestApiArticles(data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const allArticles = [...articles, ...restApiArticles];\n\n  const leftArticlesCount = Math.ceil(allArticles.length / 5);\n  const leftArticles = allArticles.slice(0, leftArticlesCount);\n  const rightArticles = allArticles.slice(leftArticlesCount, allArticles.length);\n\n  return (\n   \n   \n   <div>\n   \n   {breakpoints.sm ? \n    (\n      \n        <ul class=\"uk-list uk-list-divider uk-center uk-width-7-8\">\n          {allArticles.map((article, i) => {\n            let dt = new Date(article.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li key={`article__left__${article.node.slug}`}>\n                <a id=\"archive-link\"\n                  href={'/article/'+article.node.slug}\n                  \n                >\n                  {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.node.headline} \n                  </a>\n              </li>\n            );\n          })}\n          </ul>\n    )\n    :\n    (\n      <ul class=\"uk-list uk-list-divider uk-center uk-width-1-2\">\n          {allArticles.map((article, i) => {\n            let dt = new Date(article.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li key={`article__left__${article.node.slug}`}>\n                <a id=\"archive-link\"\n                  href={'/article/'+article.node.slug}\n                  \n                >\n                  {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.node.headline} \n                  </a>\n              </li>\n            );\n          })}\n          </ul>\n    )}\n     \n     \n    </div>\n  );\n};\n\nexport default Archives;","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport ArchivesComponent from \"../components/archives\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst ArchivePage = () => {\n  const data = useStaticQuery(query);\n  const breakpoints = useBreakpoint()\n  return (\n    <Layout seo={data.strapiHomepage.seo}>\n{breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"3%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"8%\"}}>Browse all our newsletters</h2>\n          <ArchivesComponent articles={data.allStrapiEdition.edges} />\n        \n        </div>\n      </div>\n)\n:\n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"30%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"5%\"}}>Browse all our newsletters</h2>\n          <ArchivesComponent style={{marginLeft:\"5%\"}} articles={data.allStrapiEdition.edges} />\n        \n        </div>\n      </div>\n)}\n    </Layout>\n  );\n};\n\nconst query = graphql`\n  query {\n    strapiHomepage {\n      hero {\n        title\n      }\n      seo {\n        metaTitle\n        metaDescription\n        shareImage {\n          publicURL\n        }\n      }\n    }\n    allStrapiEdition(sort: {order: DESC, fields: date},\n      filter: {writer: {id: {eq: 2}}}) {\n      edges {\n        node {\n          strapiId\n          slug\n          date\n          posts {\n            title\n            topic\n          }\n          headline\n          writer {\n            name\n            picture {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ArchivePage;"],"names":["articles","useState","restApiArticles","setRestApiArticles","breakpoints","useBreakpoint","useEffect","fetch","then","response","json","data","catch","error","console","allArticles","leftArticlesCount","Math","ceil","length","slice","sm","class","map","article","i","dt","Date","node","date","key","slug","id","href","getMonth","getDate","headline","query","useStaticQuery","seo","strapiHomepage","className","style","marginLeft","allStrapiEdition","edges"],"sourceRoot":""}