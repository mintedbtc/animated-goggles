{"version":3,"file":"component---src-pages-eventpost-js-8d5f9555a854a5ff4ec0.js","mappings":"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","sources":["webpack://nwa-daily/./src/pages/eventpost.js"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql, useStaticQuery, StaticQuery, navigate } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { withBreakpoints } from 'gatsby-plugin-breakpoints';\nimport \"../assets/css/main.css\";\nimport 'react-quill/dist/quill.snow.css';\n\nclass JobpostPage extends React.Component {\n  constructor(props) {\n    super(props);\n    if (typeof window !== 'undefined') {\n        this.ReactQuill = require('react-quill')\n      }\n    this.emailRef = React.createRef();\n    this.state = {\n      email: \"\",\n      name: \"\",\n      organization: \"\",\n      description: \"\",\n      location: \"\",\n      type: \"\",\n      slug: \"\",\n      eventLink: \"\",\n      isModalOpen: false,\n      submitError: false,\n      isSubmitted: false,\n      date: new Date()\n    }\n  }\n  handleInputChange = event => {\n    event.preventDefault();\n    console.log('test')\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    console.log(name)\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    \n    let postId = null\n    console.log(window.location.href.split('?id=').length)\n    if (window.location.href.split('?id=').length > 1) {\n      console.log('idhere')\n      console.log(window.location.href)\n      postId = window.location.href.split('?id=')[1]\n      postId = postId.split('&')[0]\n      console.log(postId)\n      }\n    else {\n        postId = 'regular'\n        console.log(postId)\n      }\n    if (this.state.email !== \"\") {\n    \n    const email = this.state.email.toLowerCase()\n    const name = this.state.name\n    const location = this.state.location\n    const organization = this.state.organization\n    const description = this.state.description\n    const title = this.state.title\n    const date = this.state.date\n    const eventLink = this.state.eventLink\n\n    const requestBody = {\n        email: email,\n        location: location,\n        name: name,\n        title: title,\n        slug: name.replaceAll(' ', '-').toLowerCase(),\n        organization: organization,\n        description: description,\n        eventLink: eventLink,\n        date: date,\n        // property: \"NWA Daily\"\n      }\n  \n    fetch(`https://nwadailybackend.herokuapp.com/events`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data)\n        this.setState({\n          isModalOpen: false,\n          isSubmitted: true\n        })\n        navigate('https://buy.stripe.com/8wM29id04f6f9OgdR3')\n      })\n      .catch(err => {\n        console.log(err);\n      });\n    \n  }\n  else {\n    this.setState({\n      submitError: true,\n    })\n    console.log(true)\n  }\n  \n  }\n\n\n\n  render() {\n    const { breakpoints } = this.props;\n    const ReactQuill = this.ReactQuill\n    \n  return (\n    <StaticQuery\n    query={graphql`\n    query {\n      strapiHomepage {\n        hero {\n          title\n        }\n        seo {\n          metaTitle\n          metaDescription\n          shareImage {\n            publicURL\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n    <Layout seo={data.strapiHomepage.seo}>\n      <div>\n{breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      \n      <h3 className=\"uk-text-center\">Post an event on our event calendar</h3>\n      <p style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"60%\"}}>Our event calendar helps our readers keep up with fun things going on in the newsletter. post your event here so our readers and website visitors know about it. Each posting is $100.</p>\n      <form class=\"uk-form\" style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"60%\"}}>\n            \n              <div class=\"test\">\n                    \n              {this.state.isSubmitted === false ?\n                (\n                  <div class=\"uk-margin\">\n              <label>\n              Event Name\n              </label>\n              <br></br>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"eventName\"\n              name=\"name\" \n              type=\"text\" \n              placeholder=\"Event Name\"\n              labelText=\"Event Name\"\n              value={this.state.name}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({name:e.target.value})\n              }}\n              />\n              <br></br>\n              <br></br>\n              <label>\n              Organization\n              </label>\n              <br></br>\n              \n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"jobOrganization\"\n              name=\"organization\" \n              type=\"text\" \n              placeholder=\"Organization\"\n              labelText=\"Organization\"\n              value={this.state.organization}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({organization:e.target.value})\n              }}\n              />\n              <br></br>\n              <br></br>\n              <label>\n              Event Location\n              </label>\n              <br></br>\n              \n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"jobLocation\"\n              name=\"location\" \n              type=\"text\" \n              placeholder=\"Job Location\"\n              labelText=\"Location\"\n              value={this.state.location}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({location:e.target.value})\n              }}\n              />\n              \n              <br></br>\n              <br></br>\n              <label>\n              Event Description\n              </label>\n              <br></br>\n             \n              {(typeof window !== 'undefined' && ReactQuill) ? \n                (\n              <ReactQuill theme=\"snow\" \n                  name=\"jobDescription\"\n                  value={this.state.description}\n                  onChange={(content) => {\n                  this.setState({description:content})\n                  }}\n              />\n                )\n                :\n                (\n                    <textarea />\n                )}\n              \n              <br></br>\n              <label>\n              Event Link\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"jobLink\"\n                name=\"link\" \n                type=\"text\" \n                placeholder=\"Event Link\"\n                labelText=\"Event Link\"\n                value={this.state.eventLink}\n                  onChange={(e) => {\n                    console.log(e.target.value)\n                    this.setState({eventLink:e.target.value})\n                }}\n                />\n                <br></br>\n                <br></br>\n              <label>\n              Event Date\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"date\"\n                name=\"date\" \n                type=\"date\" \n                placeholder=\"Event Date\"\n                labelText=\"Event Date\"\n                value={this.state.date}\n                  onChange={(e) => {\n                      const date = new Date(e.target.value);\n                      date.setDate(date.getDate());\n                      this.setState({date: date.toISOString().split('T')[0]});\n                  }}\n                />\n                <br></br>\n                <br></br>\n              <label>\n              Contact Email Address\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"jobEmail\"\n                name=\"email\" \n                type=\"text\" \n                placeholder=\"Email Address\"\n                labelText=\"Your Email\"\n                value={this.state.email}\n                  onChange={(e) => {\n                    console.log(e.target.value)\n                    this.setState({email:e.target.value})\n                }}\n                />\n                <div className=\"uk-container\">\n      \n        \n                <div className=\"job-head\">\n                  <br></br>\n      <a href=\"/jobpost\">\n      <button className=\"job-post-button\"\n              onClick={this.submitHandler}>Post your event</button>\n      </a>\n      </div>\n  </div>\n                <br></br>\n                <br></br>\n                \n                {/* <div style={{textAlign: \"center\"}}>\n            <button \n              style={{textAlign: \"center\",backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Post Job</button>\n              </div> */}\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>You're all set!</h4>\n              </div>\n                )}\n                </div>\n            \n          </form>\n        \n        </div>\n)\n:\n(\n<div className=\"uk-section\">\n      \n      <h3 className=\"uk-text-center\">Post an event on our event calendar</h3>\n      <p style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"60%\"}}>Our event calendar helps our readers keep up with fun things going on in the newsletter. post your event here so our readers and website visitors know about it. Each posting is $100.</p>\n      <form class=\"uk-form\" style={{marginLeft:\"auto\",marginRight:\"auto\",width:\"75%\"}}>\n            \n              <div class=\"test\">\n                    \n              {this.state.isSubmitted === false ?\n                (\n                  <div class=\"uk-margin\">\n              <label>\n              Event Name\n              </label>\n              <br></br>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"jobTitle\"\n              name=\"title\" \n              type=\"text\" \n              placeholder=\"Event Name\"\n              labelText=\"Event Name\"\n              value={this.state.name}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({name:e.target.value})\n              }}\n              />\n              <br></br>\n              <br></br>\n              <label>\n              Organization\n              </label>\n              <br></br>\n              \n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"jobOrganization\"\n              name=\"organization\" \n              type=\"text\" \n              placeholder=\"Organization\"\n              labelText=\"Organization\"\n              value={this.state.organization}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({organization:e.target.value})\n              }}\n              />\n              <br></br>\n              <br></br>\n              <label>\n              Event Location\n              </label>\n              <br></br>\n              \n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"jobLocation\"\n              name=\"location\" \n              type=\"text\" \n              placeholder=\"Event Location\"\n              labelText=\"Location\"\n              value={this.state.location}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({location:e.target.value})\n              }}\n              />\n              \n              <br></br>\n              <br></br>\n              <label>\n              Event Description\n              </label>\n              <br></br>\n              {(typeof window !== 'undefined' && ReactQuill) ? \n                (\n              <ReactQuill theme=\"snow\" \n                  name=\"jobDescription\"\n                  value={this.state.description}\n                  onChange={(content) => {\n                  this.setState({description:content})\n                  }}\n              />\n                )\n                :\n                (\n                    <textarea />\n                )}\n              \n              <br></br>\n              <label>\n              Event Link\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"jobLink\"\n                name=\"link\" \n                type=\"text\" \n                placeholder=\"Event Link\"\n                labelText=\"Event Link\"\n                value={this.state.eventLink}\n                  onChange={(e) => {\n                    console.log(e.target.value)\n                    this.setState({eventLink:e.target.value})\n                }}\n                />\n                <br></br>\n                <br></br>\n              <label>\n              Event Date\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"date\"\n                name=\"date\" \n                type=\"date\" \n                placeholder=\"Event Date\"\n                labelText=\"Event Date\"\n                value={this.state.date}\n                  onChange={(e) => {\n                      const date = new Date(e.target.value);\n                      date.setDate(date.getDate());\n                      this.setState({date: date.toISOString().split('T')[0]});\n                  }}\n                />\n                <br></br>\n                <br></br>\n              <label>\n              Contact Email Address\n              </label>\n              <input style={{width:\"100%\",color:\"#307765\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n                className=\"uk-input\" \n                id=\"jobEmail\"\n                name=\"email\" \n                type=\"text\" \n                placeholder=\"Email Address\"\n                labelText=\"Your Email\"\n                value={this.state.email}\n                  onChange={(e) => {\n                    console.log(e.target.value)\n                    this.setState({email:e.target.value})\n                }}\n                />\n                <br></br>\n                <br></br>\n                <div className=\"uk-container\">\n      \n        \n           \n            <div className=\"job-head\">\n                  <br></br>\n      <a href=\"/jobpost\">\n      <button className=\"job-post-button\"\n              onClick={this.submitHandler}>Post your event</button>\n      </a>\n      </div>\n        </div>\n        <br></br>\n        <br></br>\n                {/* <div style={{textAlign: \"center\"}}>\n            <button \n              style={{textAlign: \"center\",backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Post Job</button>\n              </div> */}\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>You're all set!</h4>\n              </div>\n                )}\n                </div>\n            \n          </form>\n        \n        </div>\n)}\n      </div>\n    </Layout>\n    )}\n    />     \n  )\n               \n}\n}\n\n\nexport default withBreakpoints(JobpostPage);\n"],"names":["JobpostPage","_React$Component","props","_this","call","handleInputChange","event","preventDefault","console","log","target","value","name","setState","submitHandler","e","postId","window","location","href","split","length","state","email","toLowerCase","organization","description","title","date","eventLink","requestBody","slug","replaceAll","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","isModalOpen","isSubmitted","navigate","catch","err","submitError","ReactQuill","require","emailRef","React","type","Date","_inheritsLoose","prototype","render","breakpoints","this","StaticQuery","query","Layout","seo","strapiHomepage","sm","className","style","marginLeft","marginRight","width","class","color","marginBottom","paddingBottom","id","placeholder","labelText","onChange","theme","content","setDate","getDate","toISOString","onClick","textAlign","withBreakpoints"],"sourceRoot":""}