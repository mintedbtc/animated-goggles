{"version":3,"file":"component---src-pages-archive-js-1af83684342f4944bc2a.js","mappings":"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","sources":["webpack://nwa-daily/./src/components/archives.js","webpack://nwa-daily/./src/pages/archive.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Card from \"./card\";\nimport { Link } from \"gatsby\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst Archives = ({ articles }) => {\n  const [restApiArticles, setRestApiArticles] = useState([]);\n  const breakpoints = useBreakpoint()\n\n  useEffect(() => {\n    fetch(\"https://nwadailybackend.herokuapp.com/beehiiv\", {\n      method: 'GET'\n    })\n    .then(response => response.json())\n    .then(data => setRestApiArticles(data.data))\n    .catch(error => console.error(error));\n  }, []);\n\n  const allArticles = [...restApiArticles, ...articles];\n\n  const leftArticlesCount = Math.ceil(allArticles.length / 5);\n  const leftArticles = allArticles.slice(0, leftArticlesCount);\n  const rightArticles = allArticles.slice(leftArticlesCount, allArticles.length);\n  console.log(allArticles)\n\n  return (\n   \n   \n   <div>\n   \n   {breakpoints.sm ? \n    (\n      \n        <ul class=\"uk-list uk-list-divider uk-center uk-width-7-8\">\n          {allArticles.map((article, i) => {\n            if(article.hasOwnProperty('node')) {\n              let dt = new Date(article.node.date)\n              const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n              \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n            ];\n              return (\n                // <Card\n                //   article={article}\n                //   key={`article__left__${article.node.slug}`}\n                // />\n                <li key={`article__left__${article.node.slug}`}>\n                  <a id=\"archive-link\"\n                    href={'/article/'+article.node.slug}\n                    \n                  >\n                    {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.node.headline} \n                    </a>\n                </li>\n              );\n            }\n            else {\n              let dt = new Date(article.displayed_date * 1000)\n              const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n              \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n            ];\n              return (\n                // <Card\n                //   article={article}\n                //   key={`article__left__${article.node.slug}`}\n                // />\n                <li key={`article__left__${article.slug}`}>\n                  <a id=\"archive-link\"\n                    href={`/article/${article.slug}?channel=${article.id}`}\n                    \n                  >\n                    {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.title} \n                    </a>\n                </li>\n              );\n            }\n          })}\n          </ul>\n    )\n    :\n    (\n      <ul class=\"uk-list uk-list-divider uk-center uk-width-1-2\">\n          {allArticles.map((article, i) => {\n            if(article.hasOwnProperty('node')) {\n              let dt = new Date(article.node.date)\n              const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n              \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n            ];\n              return (\n                // <Card\n                //   article={article}\n                //   key={`article__left__${article.node.slug}`}\n                // />\n                <li key={`article__left__${article.node.slug}`}>\n                  <a id=\"archive-link\"\n                    href={'/article/'+article.node.slug}\n                    \n                  >\n                    {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.node.headline} \n                    </a>\n                </li>\n              );\n            }\n            else {\n              let dt = new Date(article.displayed_date * 1000)\n              const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n              \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n            ];\n              return (\n                // <Card\n                //   article={article}\n                //   key={`article__left__${article.node.slug}`}\n                // />\n                <li key={`article__left__${article.slug}`}>\n                  <a id=\"archive-link\"\n                    href={`/article/${article.slug}?channel=${article.id}`}\n                    \n                  >\n                    {monthNames[dt.getMonth()] + ' '+ dt.getDate() + ' - ' + article.title} \n                    </a>\n                </li>\n              );\n            }\n          })}\n          </ul>\n    )}\n     \n     \n    </div>\n  );\n};\n\nexport default Archives;","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport ArchivesComponent from \"../components/archives\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst ArchivePage = () => {\n  const data = useStaticQuery(query);\n  const breakpoints = useBreakpoint()\n  return (\n    <Layout seo={data.strapiHomepage.seo}>\n{breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"3%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"8%\"}}>Browse all our newsletters</h2>\n          <ArchivesComponent articles={data.allStrapiEdition.edges} />\n        \n        </div>\n      </div>\n)\n:\n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"30%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"5%\"}}>Browse all our newsletters</h2>\n          <ArchivesComponent style={{marginLeft:\"5%\"}} articles={data.allStrapiEdition.edges} />\n        \n        </div>\n      </div>\n)}\n    </Layout>\n  );\n};\n\nconst query = graphql`\n  query {\n    strapiHomepage {\n      hero {\n        title\n      }\n      seo {\n        metaTitle\n        metaDescription\n        shareImage {\n          publicURL\n        }\n      }\n    }\n    allStrapiEdition(sort: {order: DESC, fields: date},\n      filter: {writer: {id: {eq: 2}}}) {\n      edges {\n        node {\n          strapiId\n          slug\n          date\n          posts {\n            title\n            topic\n          }\n          headline\n          writer {\n            name\n            picture {\n              childImageSharp {\n                gatsbyImageData(layout: FIXED)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default ArchivePage;"],"names":["articles","useState","restApiArticles","setRestApiArticles","breakpoints","useBreakpoint","useEffect","fetch","method","then","response","json","data","catch","error","console","allArticles","leftArticlesCount","Math","ceil","length","slice","log","sm","class","map","article","i","hasOwnProperty","dt","Date","node","date","key","slug","id","href","getMonth","getDate","headline","displayed_date","title","query","useStaticQuery","seo","strapiHomepage","className","style","marginLeft","allStrapiEdition","edges"],"sourceRoot":""}