{"version":3,"file":"component---src-pages-story-js-b0027b086731ed10cdaf.js","mappings":"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","sources":["webpack://nwa-daily/./src/components/stories.js","webpack://nwa-daily/./src/pages/story.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./card\";\nimport { Link } from \"gatsby\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst Stories = ({ stories }) => {\n  const breakpoints = useBreakpoint()\n  console.log(stories)\n\n  return (\n    \n    <div>\n   \n   {breakpoints.sm ? \n    (\n      \n      <ul class=\"uk-list uk-list-divider uk-text-center uk-width-8-8\">\n      {stories.map((story, i) => {\n        let dt = new Date(story.node.publishedAt)\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n      ];\n        return (\n          // <Card\n          //   article={article}\n          //   key={`article__left__${article.node.slug}`}\n          // />\n          <li key={`story__left__${story.node.slug}`}>\n            \n            \n               <a id=\"story-link\"\n                  href={'/story/'+story.node.slug}\n                  // state={{ postId: post.id }}\n                  style={{fontFamily:\"Helvetica,Arial,sans-serif\",fontSize:\"20px\",fontWeight:\"700\",marginBottom:\"0\",lineHeight:\"26px\",marginTop:\"8px\"}} >\n                    <strong>{story.node.title}</strong></a>\n                  <p style={{color:\"black\"}}>{\"Published \" + monthNames[dt.getMonth()] + ' '+ dt.getDate() } | {\"Written by \"+story.node.author.name}</p>\n                  <br></br>\n              \n              \n          </li>\n        );\n      })}\n      </ul>\n    )\n    :\n    (\n      \n        <ul class=\"uk-list uk-list-divider uk-text-center uk-width-2-3\">\n          {stories.map((story, i) => {\n            let dt = new Date(story.node.publishedAt)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li key={`story__left__${story.node.slug}`}>\n                \n                \n                   <a id=\"story-link\"\n                      href={'/story/'+story.node.slug}\n                      // state={{ postId: post.id }}\n                      style={{fontFamily:\"Helvetica,Arial,sans-serif\",fontSize:\"20px\",fontWeight:\"700\",marginBottom:\"0\",lineHeight:\"26px\",marginTop:\"8px\"}} >\n                        <strong>{story.node.title}</strong></a>\n                      <p style={{color:\"black\"}}>{\"Published \" + monthNames[dt.getMonth()] + ' '+ dt.getDate() } | {\"Written by \"+story.node.author.name}</p>\n                      <br></br>\n                  \n                  \n              </li>\n            );\n          })}\n          </ul>\n    )}\n     \n     \n    </div>\n  );\n};\n\nexport default Stories;","import React from \"react\";\nimport { graphql, useStaticQuery, StaticQuery, Link} from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport StoriesComponent from \"../components/stories\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\nimport { withBreakpoints } from 'gatsby-plugin-breakpoints';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from \"@material-ui/icons/Close\";\n\nclass StoryPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.emailRef = React.createRef();\n    this.state = {\n      email: \"\",\n      location: \"landing regular\",\n      isModalOpen: false,\n      submitError: false,\n      isSubmitted: false,\n      isAdSubmitted: false,\n      date: new Date()\n    }\n  }\n\n  componentDidMount(){\n\t\t// Set delay in milliseconds\n\t\twindow.setTimeout(() =>{this.setState({ isModalOpen: false })}, 2000);\n\t}  \n\n  handleInputChange = event => {\n    console.log('test')\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    console.log(name)\n    this.setState({\n      [name]: value,\n    })\n    console.log(this.state.email)\n  }\n\n\n  handleModalClose = event => {\n    // console.log('handleModalOpen: ', event);\n    this.setState({ isModalOpen: false })\n  }\n\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    \n    let postId = null\n    console.log(window.location.href.split('?id=').length)\n    if (window.location.href.split('?id=').length > 1) {\n      console.log('idhere')\n      console.log(window.location.href)\n      postId = window.location.href.split('?id=')[1]\n      postId = postId.split('&')[0]\n      console.log(postId)\n      }\n    else {\n        postId = 'regular'\n        console.log(postId)\n      }\n    if (this.state.email !== \"\") {\n    \n    const email = this.state.email.toLowerCase()\n    const location = this.state.location\n    const requestBody = {\n        email: email,\n        location: location,\n        source: postId,\n        subscribeDate: this.state.date,\n        property: \"NWA Daily\"\n      }\n  \n    fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data)\n        this.setState({\n          isModalOpen: false,\n          isSubmitted: true\n        })\n        \n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //   fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n    //   method: 'POST',\n    //   body: JSON.stringify({email: email}),\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   mode: 'cors'\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       console.log(res.status)\n    //       return res.status\n    //     }\n    //     return res;\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n  }\n  else {\n    this.setState({\n      submitError: true,\n    })\n    console.log(true)\n  }\n  \n  }\n  render() {\n    const { breakpoints } = this.props;\n    const ReactQuill = this.ReactQuill\n    console.log(this.state.isModalOpen)\n  return (\n    <StaticQuery\n    query={graphql`\n    query {\n      strapiHomepage {\n        hero {\n          title\n        }\n        seo {\n          metaTitle\n          metaDescription\n          shareImage {\n            publicURL\n          }\n        }\n      }\n      allStrapiArticle(sort: {order: DESC, fields: publishedAt}) {\n        edges {\n          node {\n            strapiId\n            slug\n            publishedAt\n            content\n            title\n            author {\n              name\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n    <Layout seo={data.strapiHomepage.seo}>\n      <Dialog\n        open={this.state.isModalOpen}\n        keepMounted\n        onClose={() => this.handleModalClose()}\n        aria-labelledby=\"modal-slide-title\"\n        aria-describedby=\"modal-slide-description\"\n      >\n        <DialogTitle\n          id=\"classic-modal-slide-title\"\n          disableTypography\n        >\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={() => this.handleModalClose()}\n          >\n            <Close />\n          </IconButton>\n          <h3 style={{fontWeight:\"bold\"}}>Join thousands of NWA locals and subscribe to the free daily newsletter</h3>\n        </DialogTitle>\n        <DialogContent\n          id=\"modal-slide-description\"\n        >\n          {breakpoints.sm ? \n            (\n            <form>\n            \n            {this.state.isSubmitted === false ?\n                (\n                  \n                  <div class=\"uk-margin\" style={{width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n            <input \n              style={{width:\"100%\",color:\"#307765\",marginLeft:\"auto\",marginRight:\"auto\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value,\n                                  location:\"landing pop up\"})\n              }}\n              />\n              <br></br>\n              <br></br>\n            <button \n              style={{width:\"100%\",marginLeft:\"auto\",marginRight:\"auto\",backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n             \n            </form>\n            )\n            :\n            (\n              <form>\n            \n            {this.state.isSubmitted === false ?\n                (\n                  \n                  <div class=\"uk-margin\" style={{width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n            <input \n              style={{width:\"70%\",color:\"#307765\",marginLeft:\"auto\",marginRight:\"auto\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value})\n              }}\n              />\n            <button \n              style={{backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n             \n            </form>\n            )}\n            </DialogContent>\n      </Dialog>\n{breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"3%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"14%\"}}>Browse all our stories</h2>\n          <StoriesComponent stories={data.allStrapiArticle.edges} />\n        \n        </div>\n      </div>\n)\n:\n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div style={{marginLeft:\"23%\"}} className=\"uk-container uk-container-large\" >\n        <h2 style={{marginLeft:\"17%\"}}>Browse all our stories</h2>\n          <StoriesComponent stories={data.allStrapiArticle.edges} />\n        \n        </div>\n      </div>\n)\n    }\n    </Layout>\n    )}\n    />     \n  )\n               \n}\n}\n\nexport default withBreakpoints(StoryPage);"],"names":["stories","breakpoints","useBreakpoint","console","log","sm","class","map","story","i","dt","Date","node","publishedAt","key","slug","id","href","style","fontFamily","fontSize","fontWeight","marginBottom","lineHeight","marginTop","title","color","getMonth","getDate","author","name","StoryPage","props","handleInputChange","event","target","value","setState","state","email","handleModalClose","isModalOpen","submitHandler","e","preventDefault","postId","window","location","split","length","requestBody","toLowerCase","source","subscribeDate","date","property","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","isSubmitted","catch","err","submitError","emailRef","React","isAdSubmitted","componentDidMount","setTimeout","render","this","ReactQuill","StaticQuery","query","seo","strapiHomepage","open","keepMounted","onClose","disableTypography","onClick","width","marginLeft","marginRight","paddingBottom","className","type","placeholder","labelText","onChange","backgroundColor","opacity","textAlign","allStrapiArticle","edges","withBreakpoints"],"sourceRoot":""}