{"version":3,"file":"component---src-pages-events-in-northwest-arkansas-js-01dfb3a54aaccea696b3.js","mappings":"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","sources":["webpack://nwa-daily/./src/components/events.js","webpack://nwa-daily/./src/pages/events-in-northwest-arkansas.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"./card\";\nimport { Link } from \"gatsby\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\n\nconst Events = ({ events }) => {\n  const breakpoints = useBreakpoint()\n  console.log(events)\n\n  return (\n    \n    <div>\n   \n   {breakpoints.sm ? \n    (\n      \n      <ul className=\"uk-list uk-list-divider uk-width-8-8\">\n           {events.map((event, i) => {\n            let dt = new Date(event.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n          if (event.node.type === 'Featured') {\n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li className=\"mobile-event\" style={{backgroundColor:\"#FFFFE0\"}} key={`event__left__${event.node.slug}`}>\n                \n                \n                   <a\n                      className=\"event-mobile\"\n                      href={'/events-in-northwest-arkansas/'+event.node.slug}\n                      // state={{ postId: post.id }}\n                      >\n                       \n                        \n                        <span className=\"company-mobile\">{event.node.organization}</span>\n                        <br></br>\n                        <div className=\"event-middle-section\">\n                        <img width=\"35\" height=\"35\" src={event.node.photo.publicURL}/>\n                        <span className=\"title-mobile\">{event.node.title}</span>\n                        <span className=\"date-mobile\">Featured</span>\n                        </div>\n                        <br></br>\n                        <span className=\"location-company-mobile\">{event.node.location}</span>\n                        \n                        \n                        </a>\n                      \n                  \n                  \n              </li>\n            );\n          }\n          })\n          \n        }\n\n        {events.map((event, i) => {\n            let dt = new Date(event.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n          let today = new Date();\n        if (event.node.type !== 'Featured' && dt >= today) {\n            \n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li className=\"mobile-event\" key={`event__left__${event.node.slug}`}>\n                \n                \n                   <a\n                      className=\"event-mobile\"\n                      href={'/events-in-northwest-arkansas/'+event.node.slug}\n                      // state={{ postId: post.id }}\n                      >\n                       \n                       <div className=\"event-middle-section\">\n                        <span className=\"event-mobile\">{event.node.name}</span>\n                        <span className=\"category-mobile\">{event.node.type}</span>\n                        {/* <br></br> */}\n                        {/* <br></br> */}\n                        {/* <img width=\"35\" height=\"35\" src={event.node.photo.publicURL}/> */}\n                        {/* <span className=\"title-mobile\">{event.node.title}</span> */}\n                        <span className=\"event-date-mobile\">{monthNames[dt.getMonth()] + ' '+ dt.getDate()}</span>\n                        </div>\n                        {/* <br></br> */}\n                        {/* <span className=\"location-company-mobile\">{event.node.location}</span> */}\n                        \n                        \n                        </a>\n                      \n                  \n                  \n              </li>\n            );\n          \n        }\n      })\n          \n    }\n      \n      </ul>\n    )\n    :\n    (\n      \n        <ul className=\"uk-list uk-list-divider uk-width-8-8\">\n          {events.map((event, i) => {\n            let dt = new Date(event.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n          let today = new Date();\n          if (event.node.type === 'Featured' && dt >= today) {\n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li className=\"event\" style={{backgroundColor:\"#FFFFE0\"}} key={`event__left__${event.node.slug}`}>\n                \n                \n                   <a\n                      className=\"event\"\n                      href={'/events-in-northwest-arkansas/'+event.node.slug}\n                      // state={{ postId: post.id }}\n                      >\n                       \n                       <div className=\"event-middle-section\">\n                        <span className=\"event\">{event.node.organization}</span>\n                        <span className=\"category\">{event.node.type}</span>\n                        {/* <br></br> */}\n                        \n                        {/* <img width=\"35\" height=\"35\" src={event.node.photo.publicURL}/> */}\n                        {/* <span className=\"title\">{event.node.title}</span> */}\n                        <span className=\"event-date\">Featured</span>\n                        </div>\n                        {/* <br></br> */}\n                        {/* <span className=\"location company\">{event.node.location}</span> */}\n                        \n                        \n                        </a>\n                      \n                  \n                  \n              </li>\n            );\n          }\n          })\n          \n        }\n\n        {events.map((event, i) => {\n            let dt = new Date(event.node.date)\n            const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n          ];\n          let today = new Date();\n          console.log(today)\n          console.log(dt)\n        if (event.node.type !== 'Featured' && dt >= today) {\n            \n            return (\n              // <Card\n              //   article={article}\n              //   key={`article__left__${article.node.slug}`}\n              // />\n              <li className=\"event\" key={`event__left__${event.node.slug}`}>\n                \n                \n                   <a\n                      className=\"event\"\n                      href={'/events-in-northwest-arkansas/'+event.node.slug}\n                      // state={{ postId: post.id }}\n                      >\n                       \n                       <div className=\"event-middle-section\">\n                        <span className=\"event\">{event.node.name}</span>\n                        {/* <br></br> */}\n                        <span className=\"category\">{event.node.type}</span>\n                        {/* <img width=\"35\" height=\"35\" src={event.node.photo.publicURL}/> */}\n                        {/* <span className=\"title\">{event.node.title}</span> */}\n                        <span className=\"event-date\">{monthNames[dt.getMonth()] + ' '+ dt.getDate()}</span>\n                        </div>\n                        {/* <br></br> */}\n                        {/* <span className=\"location company\">{event.node.location}</span> */}\n                        \n                        \n                        </a>\n                      \n                  \n                  \n              </li>\n            );\n          \n        }\n      })\n          \n    }\n        \n          </ul>\n    )}\n     \n     \n    </div>\n  );\n};\n\nexport default Events;","import React from \"react\";\nimport { Link, graphql, useStaticQuery, StaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport EventsComponent from \"../components/events\";\nimport \"../assets/css/main.css\";\nimport { useBreakpoint } from 'gatsby-plugin-breakpoints';\nimport { withBreakpoints } from 'gatsby-plugin-breakpoints';\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from '@material-ui/core/IconButton';\nimport Close from \"@material-ui/icons/Close\";\n\nconst email = \"\"\n\nclass EventsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.emailRef = React.createRef();\n    this.state = {\n      email: \"\",\n      location: \"landing regular\",\n      isModalOpen: false,\n      submitError: false,\n      isSubmitted: false,\n      isAdSubmitted: false,\n      advertiser: \"\",\n      oneLiner: \"0\",\n      extendedText: \"0\",\n      sponsor: \"0\",\n      date: new Date()\n    }\n  }\n\n  componentDidMount(){\n\t\t// Set delay in milliseconds\n\t\twindow.setTimeout(() =>{this.setState({ isModalOpen: true })}, 1500);\n\t}  \n\n  handleInputChange = event => {\n    console.log('test')\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    console.log(name)\n    this.setState({\n      [name]: value,\n    })\n    console.log(this.state.email)\n  }\n\n  handleAdInputChange = event => {\n    console.log('test')\n    const target = event.target\n    const value = target.value\n    const name = target.name\n    console.log(name)\n    this.setState({\n      [name]: value,\n    })\n    console.log(this.state.advertiser)\n  }\n\n  handleModalClose = event => {\n    // console.log('handleModalOpen: ', event);\n    this.setState({ isModalOpen: false })\n  }\n\n  submitAdHandler = (e) => {\n    e.preventDefault();\n    \n    \n    if (this.state.advertiser !== \"\") {\n    \n    const advertiser = this.state.advertiser.toLowerCase()\n    const oneLiner = this.state.oneLiner\n    const extendedText = this.state.extendedText\n    const sponsor = this.state.sponsor\n    const requestBody = {\n        email: advertiser,\n        oneLiner: oneLiner,\n        event: extendedText,\n        sponsor: sponsor,\n        property: \"NWA Daily\"\n        // location: \"advertise\",\n        // source: \"regular\",\n      }\n  \n    fetch(`https://nwadailybackend.herokuapp.com/inquiries`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data)\n        this.setState({\n          isAdSubmitted: true\n        })\n        \n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  else {\n    this.setState({\n      submitError: true,\n    })\n    console.log(true)\n  }\n  \n  }\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    \n    let postId = null\n    console.log(window.location.href.split('?id=').length)\n    if (window.location.href.split('?id=').length > 1) {\n      console.log('idhere')\n      console.log(window.location.href)\n      postId = window.location.href.split('?id=')[1]\n      postId = postId.split('&')[0]\n      console.log(postId)\n      }\n    else {\n        postId = 'event-calendar'\n        console.log(postId)\n      }\n    if (this.state.email !== \"\") {\n    \n    const email = this.state.email.toLowerCase()\n    const location = this.state.location\n    const requestBody = {\n        email: email,\n        location: location,\n        source: postId,\n        subscribeDate: this.state.date,\n        property: \"NWA Daily\"\n      }\n  \n    fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData.data)\n        this.setState({\n          isModalOpen: false,\n          isSubmitted: true\n        })\n        \n      })\n      .catch(err => {\n        console.log(err);\n      });\n    //   fetch(`https://nwadailybackend.herokuapp.com/signup`, {\n    //   method: 'POST',\n    //   body: JSON.stringify({email: email}),\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   mode: 'cors'\n    // })\n    //   .then(res => {\n    //     if (res.status !== 200 && res.status !== 201) {\n    //       console.log(res.status)\n    //       return res.status\n    //     }\n    //     return res;\n    //   })\n    //   .catch(err => {\n    //     console.log(err);\n    //   });\n  }\n  else {\n    this.setState({\n      submitError: true,\n    })\n    console.log(true)\n  }\n  \n  }\nrender() {\n  const { breakpoints } = this.props;\n  console.log(breakpoints)\n  \n  return (\n    \n    <StaticQuery\n                              query={graphql`\n                              query {\n                                strapiHomepage {\n                                  hero {\n                                    title\n                                  }\n                                  seo {\n                                    metaTitle\n                                    metaDescription\n                                    shareImage {\n                                      publicURL\n                                    }\n                                  }\n                                }\n                                allStrapiEvent(sort: {order: ASC, fields: date}) {\n                                  edges {\n                                    node {\n                                      strapiId\n                                      slug\n                                      published_at\n                                      description\n                                      name\n                                      type\n                                      date\n                                      eventLink\n                                      photo {\n                                        publicURL\n                                      }\n                                      location\n                                      organization\n                                    }\n                                  }\n                                }\n                              }\n                              `}\n                              render={data => (\n                                <Layout seo={data.strapiHomepage.seo}>\n\n{/* const EventsPage = () => {\n  const data = useStaticQuery(query);\n  const breakpoints = useBreakpoint()\n  \n  const seo = {\n    metaTitle: \"NWA Daily Event Board\",\n    metaDescription: \"Find cool jobs in Northwest Arkansas from small businesses, startups, and corporations in Bentonville, Fayetteville, Springdale, Rogers, and more\",\n    shareImage: data.strapiHomepage.seo.shareImage,\n  };\n  return (\n    <Layout seo={seo}> */}\n<Dialog\n        open={this.state.isModalOpen}\n        keepMounted\n        onClose={() => this.handleModalClose()}\n        aria-labelledby=\"modal-slide-title\"\n        aria-describedby=\"modal-slide-description\"\n      >\n        <DialogTitle\n          id=\"classic-modal-slide-title\"\n          disableTypography\n        >\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={() => this.handleModalClose()}\n          >\n            <Close />\n          </IconButton>\n          <h3 style={{fontWeight:\"bold\"}}>Join thousands of NWA locals and subscribe to the free daily newsletter</h3>\n        </DialogTitle>\n        <DialogContent\n          id=\"modal-slide-description\"\n        >\n          {breakpoints.sm ? \n            (\n            <form>\n            \n            {this.state.isSubmitted === false ?\n                (\n                  \n                  <div class=\"uk-margin\" style={{width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n            <input \n              style={{width:\"100%\",color:\"#307765\",marginLeft:\"auto\",marginRight:\"auto\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value,\n                                  location:\"landing pop up\"})\n              }}\n              />\n              <br></br>\n              <br></br>\n            <button \n              style={{width:\"100%\",marginLeft:\"auto\",marginRight:\"auto\",backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n             \n            </form>\n            )\n            :\n            (\n              <form>\n            \n            {this.state.isSubmitted === false ?\n                (\n                  \n                  <div class=\"uk-margin\" style={{width:\"90%\",marginLeft:\"auto\",marginRight:\"auto\"}}>\n            <input \n              style={{width:\"70%\",color:\"#307765\",marginLeft:\"auto\",marginRight:\"auto\", marginBottom:\"0px\",paddingBottom:\"0px\"}} \n              className=\"uk-input\" \n              id=\"signup\"\n              name=\"email\" \n              type=\"text\" \n              placeholder=\"Email address\"\n              labelText=\"Your Email\"\n              value={this.state.email}\n                onChange={(e) => {\n                  console.log(e.target.value)\n                  this.setState({email:e.target.value})\n              }}\n              />\n            <button \n              style={{backgroundColor:\"#307765\",opacity:1,color:\"white\"}} \n              className=\"uk-button uk-button-default\"\n              onClick={this.submitHandler}\n              >Subscribe</button>\n              </div>\n                )\n                :\n                (\n                  <div class=\"uk-margin\">\n            <h4 style={{textAlign:\"center\"}}>Look for us in your inbox!</h4>\n              </div>\n                )}\n             \n            </form>\n            )}\n            </DialogContent>\n      </Dialog>\n      <div className=\"job-head\">\n      <h2 className=\"job-header\">Browse upcoming events in Northwest Arkansas</h2>\n      <a href=\"/eventpost\">\n      <button className=\"job-post-button\"\n              >Post an event</button>\n      </a>\n      {/* <a href=\"/jobpost\">\n      <button className=\"job-post-button\"\n              >Post an event</button>\n      </a> */}\n      </div>\n\n{data.allStrapiEvent.edges.length > 0 ?\n(breakpoints.sm ? \n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div className=\"uk-container uk-container-large\" >\n\n          <EventsComponent events={data.allStrapiEvent.edges} />\n        \n        </div>\n      </div>\n)\n:\n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div className=\"uk-container uk-container-large\" >\n        \n          <EventsComponent events={data.allStrapiEvent.edges} />\n        \n        </div>\n      </div>\n)\n) \n:\n(\n<div className=\"uk-section\">\n      {/* <h1 className=\"uk-text-center\">{data.strapiHomepage.hero.title}</h1> */}\n        <div className=\"uk-container uk-container-large uk-text-center\" >\n\n          <p>There are no jobs posted at this time</p>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n          <br></br>\n        \n        </div>\n      </div>\n)}\n\n</Layout>\n    )}\n    />     \n  );\n};\n}\n\n\nexport default withBreakpoints(EventsPage);"],"names":["_ref","events","breakpoints","useBreakpoint","console","log","React","sm","className","map","event","i","Date","node","date","type","style","backgroundColor","key","slug","href","organization","width","height","src","photo","publicURL","title","location","dt","monthNames","today","name","getMonth","getDate","EventsPage","_React$Component","props","_this","call","handleInputChange","target","value","setState","state","email","handleAdInputChange","advertiser","handleModalClose","isModalOpen","submitAdHandler","e","preventDefault","requestBody","toLowerCase","oneLiner","extendedText","sponsor","property","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","isAdSubmitted","catch","err","submitError","submitHandler","postId","window","split","length","source","subscribeDate","isSubmitted","emailRef","_inheritsLoose","_proto","prototype","componentDidMount","setTimeout","this","render","StaticQuery","query","Layout","seo","strapiHomepage","Dialog","open","keepMounted","onClose","DialogTitle","id","disableTypography","IconButton","color","onClick","Close","fontWeight","DialogContent","class","marginLeft","marginRight","marginBottom","paddingBottom","placeholder","labelText","onChange","opacity","textAlign","allStrapiEvent","edges","EventsComponent","withBreakpoints"],"sourceRoot":""}